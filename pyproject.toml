[project]
name = "grit-guardian"
version = "0.1.1a0"
description = "Terminal-based habit tracker with virtual companion"
readme = "README.md"
requires-python = ">=3.11"
authors = [{ name = "Patrick Weiss", email = "patrick.weiss@iu-study.org" }]
license = { text = "MIT" }
keywords = ["habit-tracker", "cli", "productivity", "terminal"]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: End Users/Desktop",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3.11",
]
dependencies = [
  "click (>=8.2.1,<9.0.0)",
  "sphinx (>=8.2.3,<9.0.0)",
  "sphinxcontrib-mermaid (>=1.0.0,<2.0.0)",
  "sphinx-copybutton (>=0.5.2,<0.6.0)",
]

[project.urls]
homepage = "https://github.com/pi-weiss/grit-guardian"
repository = "https://github.com/pi-weiss/grit-guardian"
documentation = "https://grit-guardian.readthedocs.io"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
packages = [{include = "grit_guardian", from = "src"}]

[tool.poetry.group.dev.dependencies]
pytest = ">=8.2.1,<9.0.0"
pytest-cov = ">=6.2.1,<7.0.0"
sphinx-rtd-theme = "^3.0.2"
sphinx-autobuild = ">=2024.10.3,<2025.0.0"

[tool.poetry.scripts]
grit-guardian = "grit_guardian.cli:main"
gg = "grit_guardian.cli:main"

# Pytest configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=grit_guardian",
    "--cov-report=html",
    "--cov-report=term-missing",
    "--cov-report=xml",
    "--strict-markers",
    "--strict-config",
    "-ra"
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning"
]

# Coverage configuration
[tool.coverage.run]
source = ["grit_guardian"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
    "*/venv/*",
    "*/virtualenv/*"
]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]
ignore_errors = true
precision = 2
show_missing = true
skip_covered = false

[tool.coverage.html]
directory = "htmlcov"
